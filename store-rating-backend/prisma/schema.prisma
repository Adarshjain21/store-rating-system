// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
   output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(60)
  email     String   @unique
  password  String
  address   String   @db.VarChar(400)
  role      Role     @default(NORMAL_USER)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  ratings   Rating[]
  stores    Store[]

  @@map("users")
}

model Store {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(60)
  email     String
  address   String   @db.VarChar(400)
  ownerId   Int      @map("owner_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  owner     User     @relation(fields: [ownerId], references: [id])
  ratings   Rating[]

  @@map("stores")
}

model Rating {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  storeId   Int      @map("store_id")
  rating    Int      @db.SmallInt
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  user      User     @relation(fields: [userId], references: [id])
  store     Store    @relation(fields: [storeId], references: [id])

  // Unique constraint to ensure a user can only rate a store once
  @@unique([userId, storeId])
  @@map("ratings")
}

enum Role {
  SYSTEM_ADMIN
  NORMAL_USER
  STORE_OWNER
}
